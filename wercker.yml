box: pjvds/golang
build:
  steps:
    - script:
        name: List src dir
        code: ls -laxo $WERCKER_ROOT_DIR
    - pjvds/setup-go-workspace
    - script:
        name: Sync root and source
        code: |-
          rsync -avzv "$WERCKER_ROOT/" "$WERCKER_SOURCE_DIR/"
          ls -laxo $WERCKER_SOURCE_DIR
    - script:
        name: Populate cache
        code: |-
            # BEFORE YOU COPY AND USE THIS STEP IN YOUR OWN BUILD PIPELINE
            # MAKE SURE YOU SET $WERCKER_SOURCE_DIR TO THE PACKAGE DIRECTORY
            # OR YOUR PROJECT, LIKE: $GOPATH/github.com/pjvds/httpcallback.io
            if test -d "$WERCKER_CACHE_DIR/go-pkg-cache"; then rsync -avzv --exclude "$WERCKER_SOURCE_DIR" "$WERCKER_CACHE_DIR/go-pkg-cache/" "$GOPATH/" ; fi
    - script:
        name: Get dependencies
        code: go get -v ./...
    - script:
        name: Build
        code: |
          go build -v
    - script:
        name: Test
        code: go test ./...
    - script:
        name: Coveralls.io
        code: |-
            go get github.com/axw/gocov/gocov
            go get github.com/mattn/goveralls
            goveralls $COVERALLS_TOKEN
    - script:
        name: Store cache
        code: |-
            # BEFORE YOU COPY AND USE THIS STEP IN YOUR OWN BUILD PIPELINE
            # MAKE SURE YOU SET $WERCKER_SOURCE_DIR TO THE PACKAGE DIRECTORY
            # OR YOUR PROJECT, LIKE: $GOPATH/github.com/pjvds/httpcallback.io
            rsync -avzv --exclude "$WERCKER_SOURCE_DIR" "$GOPATH/" "$WERCKER_CACHE_DIR/go-pkg-cache/"
